name: Auto Publish Website # 自动部署的名称
on:
  push:
    tags: # 当我们提交代码为tag 是以'v'开头的时候才会触发自动部署到服务端 如 git push tag v0.1.0
      - 'test*'
permissions:
  contents: write

jobs:
  goreleaser:
    runs-on: ubuntu-22.04
    steps:
      -
        name: Install dependencies for cross-compiling
        run: |
          sudo apt update 
          sudo apt-get --no-install-recommends --yes install \
            libc6-dev-amd64-cross \
            gcc-aarch64-linux-gnu libc6-dev-arm64-cross \
            gcc-arm-linux-gnueabihf libc6-dev-armhf-cross
      -
        name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      -
        name: Fetch all tags
        run: git fetch --force --tags
        
      - name: Get version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
      -
        name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.19
      -
        name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          # either 'goreleaser' (default) or 'goreleaser-pro'
          distribution: goreleaser
          version: latest
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # Your GoReleaser Pro key, if you are using the 'goreleaser-pro' distribution
          # GORELEASER_KEY: ${{ secrets.GORELEASER_KEY }}
    # 第五步：部署到服务器
    # - name: Deploy
    #   uses: appleboy/ssh-action@master # 使用ssh链接服务器
    #   with:
    #     host: ${{ secrets.HOST }} #配置的服务器地址
    #     username: ${{ secrets.USERNAME }} #配置的服务器用户名
    #     password: ${{ secrets.PASSWORD }} #配置的密码
    #     port: ${{ secrets.PORT }} #配置的端口
    #     script: | # 执行命令（运行到服务器）cd：要确保服务器有这个目录； wget：下载上一步的release到服务器； tar：解压； 安装依赖；启动服务
    #       cd /data/www/oppnys.com
    #       wget https://github.com/oppnys/oppnys.com/releases/latest/download/release.tgz -O release.tgz
    #       tar zxvf release.tgz
    #       yes | cp -r -f dist/* ./